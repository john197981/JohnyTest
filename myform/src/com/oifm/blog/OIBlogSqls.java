package com.oifm.blog;

import com.oifm.common.OILabelConstants;

public interface OIBlogSqls {
	
	//sEQUENCE FOR cREATE BLOG
	public static final String CREATE_BLOG_SEQ = "SEQ_OI_BG_BLOGID";
	
	// Query to create a blog
	public static final String CREATE_BLOG = "INSERT INTO OI_BG_BLOG(BLOG_ID,TITLE,NO_OF_POSTS_SHOW,CREATED_ON) VALUES(?,?,4,SYSDATE)";
	
	// Query to update a blog
	public static final String UPDATE_BLOG = "UPDATE OI_BG_BLOG SET TITLE=? WHERE BLOG_ID=?";
	
	// Query to update the No of Posts to display for a blog
	public static final String UPDATE_BLOG_NO_POSTS = "UPDATE OI_BG_BLOG SET NO_OF_POSTS_SHOW=? WHERE BLOG_ID=?";
	
	// Query to delete a blog
	public static final String DELETE_BLOG = "DELETE FROM OI_BG_BLOG WHERE BLOG_ID=?";
	
	// Query to retreive the Blog Module Configuration Details 
	public static final String GET_BLOG_CONFIG = "SELECT NO_OF_POSTS, NO_OF_FEAT_POSTS, BLOG_MESSAGE FROM OI_BG_BLOG_CONFIG ";

	// Query to update the Blog Module Configuration Details
	public static final String UPDATE_BLOG_CONFIG = "UPDATE OI_BG_BLOG_CONFIG SET NO_OF_POSTS=?,NO_OF_FEAT_POSTS=?,BLOG_MESSAGE=?";
	
	// Query to retrive the lists of blogs and 
	public static final String GET_ALL_BLOGLIST = "SELECT BLOG.BLOG_ID,BLOG.TITLE,COUNT(DISTINCT AUTHORS.USERID) TOTAL_AUTHORS,COUNT(DISTINCT ENTRIES.ENTRY_ID) TOTAL_ENTRIES,COUNT(DISTINCT COMMENTS.COMMENT_ID) TOTAL_COMMENTS FROM OI_BG_BLOG BLOG "
													+" LEFT OUTER JOIN OI_BG_AUTHORS AUTHORS ON AUTHORS.BLOG_ID=BLOG.BLOG_ID "
													+" LEFT OUTER JOIN OI_BG_ENTRY ENTRIES ON ENTRIES.BLOG_ID=BLOG.BLOG_ID "
													+" LEFT OUTER JOIN OI_BG_ENTRY_COMMENTS COMMENTS ON COMMENTS.BLOG_ID=ENTRIES.BLOG_ID AND COMMENTS.ENTRY_ID=ENTRIES.ENTRY_ID"
													+" GROUP BY BLOG.BLOG_ID,BLOG.TITLE ";
	
	//Query to Associate Authors to a Blog
	public static final String CREATE_BLOG_AUTHOR = "INSERT INTO OI_BG_AUTHORS(BLOG_ID,USERID,NOTIFY_EMAIL,ABOUT_ME) VALUES(?,?,?,EMPTY_CLOB())";
	
	//	Query to DELETE a Blog Author
	public static final String DELETE_BLOG_AUTHOR = "DELETE FROM OI_BG_AUTHORS WHERE BLOG_ID=? AND USERID IN (?)";
	
	//	Query to Retrive all the Blog Authors
	public static final String GET_BLOG_AUTHORS = "SELECT AUTH.USERID,AUTH.NOTIFY_EMAIL,PROFILE.DIVISIONCODE,PROFILE.NAME,PROFILE.EMAILID,PROFILE.NICKNAME FROM OI_BG_AUTHORS AUTH LEFT JOIN OI_AD_PROFILE PROFILE ON PROFILE.USERID=AUTH.USERID WHERE AUTH.BLOG_ID=?";
	
	// Query to retrieve other blog authors
	public static final String GET_OTHER_BLOG_AUTHORS = "SELECT AUTH.USERID,AUTH.NOTIFY_EMAIL,PROFILE.DIVISIONCODE,PROFILE.NAME,PROFILE.EMAILID,PROFILE.NICKNAME FROM OI_BG_AUTHORS AUTH LEFT JOIN OI_AD_PROFILE PROFILE ON PROFILE.USERID=AUTH.USERID WHERE AUTH.BLOG_ID=? AND AUTH.USERID <> ?";
	
	//Query to get all the Users 
	public static final String GET_ALL_USERS = "SELECT * FROM (SELECT ROWNUM NUM, TB.* FROM (SELECT USERID,NAME,EMAILID,ZONEBRANCHCODE,SCHOOLCODE,DIVISIONCODE,DESIGNATIONCODE FROM OI_AD_PROFILE WHERE NVL(OBSOLETE,'N')='N' AND UPPER(NAME) LIKE UPPER(?) ORDER BY TRIM(NAME) ASC, ZONEBRANCHCODE,SCHOOLCODE,DIVISIONCODE,DESIGNATIONCODE ) TB) WHERE NUM >= ? AND NUM <= ?";
	public static final String GET_ALL_USERS_COUNT = "SELECT COUNT(USERID) TOTAL FROM OI_AD_PROFILE WHERE UPPER(NAME) LIKE UPPER(?)";
	
	//	 Query to get the Blog Data
	public static final String GET_BLOG = "SELECT TITLE FROM OI_BG_BLOG WHERE BLOG_ID=? ";
	
	//	Query to Retrive all the Blogs Authors
//	public static final String GET_ALL_BLOGS_AUTHORS = "SELECT DISTINCT AUTH.USERID,PROFILE.DIVISIONCODE,PROFILE.NAME,PROFILE.EMAILID,PROFILE.NICKNAME,ABOUT_IMAGE FROM OI_BG_AUTHORS AUTH " 
//														+" LEFT OUTER JOIN OI_AD_PROFILE PROFILE ON PROFILE.USERID=AUTH.USERID order by Upper(PROFILE.NAME) ";
	public static final String GET_ALL_BLOGS_AUTHORS = "SELECT DISTINCT AUTH.USERID,PROFILE.DIVISIONCODE,PROFILE.NAME,PROFILE.EMAILID,PROFILE.NICKNAME FROM OI_BG_AUTHORS AUTH " 
		+" LEFT OUTER JOIN OI_AD_PROFILE PROFILE ON PROFILE.USERID=AUTH.USERID order by Upper(PROFILE.NAME) ";
	
	//	Query to retrive the lists recent entries
	public static final String GET_RECENT_ENTRIES = "SELECT * FROM (SELECT * FROM OI_BG_ENTRY WHERE BLOG_ID = ? ORDER BY CREATED_ON DESC) WHERE ROWNUM <= 5";

	//Query to retrive the lists recent comments
	public static final String GET_RECENT_COMMENTS = "SELECT * FROM (SELECT BEC.*, AP.NICKNAME FROM OI_BG_ENTRY_COMMENTS BEC, OI_AD_PROFILE AP WHERE BLOG_ID = ? AND BEC.CREATED_BY = AP.USERID ORDER BY BEC.CREATED_ON DESC) WHERE ROWNUM <= 5";
	
	//Query to retrive categories
	//modify by edmund
	public static final String GET_ALL_CATEGORIES = "SELECT NAME,CATEGORY_ID FROM OI_BG_CATEGORY ORDER BY NAME";
	
	public static final String GET_CATEGORy = "SELECT NAME,CATEGORY_ID FROM OI_BG_CATEGORY WHERE CATEGORY_ID=?";

	//Query to create categories
	public static final String CREATE_CATEGORIES = "INSERT INTO OI_BG_CATEGORY(CATEGORY_ID,NAME)  VALUES(SEQ_OI_BG_CATEGORYID.NEXTVAL,?)";
	
	//	To Be Modified to include blog id in where condition  Query to retrive the lists recent entries
	//modify by edmund
	public static final String GET_ALL_ENTRIES = "SELECT ENTRY_ID,TITLE FROM OI_BG_ENTRY ORDER BY CREATED_ON DESC";

	
	//	 Query to get the Entry Data
	// modify by edmund
	public static final String GET_ENTRY = " SELECT TITLE,CATEGORY_ID,ENTRY_BODY,ENTRY_EXCEPT,STATUS,ALLOW_COMMENTS,IMAGE_NAME FROM OI_BG_ENTRY WHERE  ENTRY_ID=?  AND BLOG_ID=?";
	public static final String GET_BLOG_TAG = "SELECT a.tag_id tagId, name FROM oi_tags a, oi_tags_map b WHERE a.tag_id = b.tag_id AND b.MODULE_TYPE = 'BG' AND b.MODULE_ID = ?";;

	// Query to get the latest posts 
	public static final String GET_ALL_BLOGS_LATEST_POSTS = "SELECT * FROM (SELECT ENTRY.ENTRY_ID,ENTRY.BLOG_ID,ENTRY.CREATED_ON,ENTRY.ENTRY_BODY,BLOG.TITLE FROM OI_BG_ENTRY ENTRY "
													+" LEFT OUTER JOIN OI_BG_BLOG BLOG ON BLOG.BLOG_ID = ENTRY.BLOG_ID "
													+" ORDER BY ENTRY.CREATED_ON ) WHERE ROWNUM<=? ";
	
	//	 Query to get the Months which has Entries
	//public static final String GET_ENTRY_MONTHS = "SELECT DISTINCT TO_CHAR(CREATED_ON,'MONTH YYYY') MONTHS FROM OI_BG_ENTRY ";
	public static final String GET_ENTRY_MONTHS = "SELECT DISTINCT INITCAP(TO_CHAR(CREATED_ON,'MONTH YYYY')) AS MONTHS,TO_CHAR(CREATED_ON,'MM') AS MONTHNO, TO_CHAR(CREATED_ON,'YY') AS YEARNO FROM OI_BG_ENTRY ";
	//added by edmund
	public static final String CREATE_BLOG_ENTRY = "INSERT INTO OI_BG_ENTRY (ENTRY_ID,BLOG_ID,CATEGORY_ID,TITLE,STATUS,ENTRY_EXCEPT,ALLOW_COMMENTS,IS_FEATURED,CREATED_ON,CREATED_BY,ENTRY_BODY) VALUES (SEQ_OI_BG_ENTRYID.NEXTVAL,?,?,?,?,?,?,'N',SYSDATE,?,EMPTY_CLOB())";
	public static final String INSERT_ENTRY_BODY = "SELECT ENTRY_BODY FROM OI_BG_ENTRY WHERE ENTRY_ID = ? ";
	public static final String INSERT_ENRTY_FILENAME = "UPDATE OI_BG_ENTRY SET IMAGE_NAME = ? WHERE ENTRY_ID = ? AND BLOG_ID = ?";
	//public static final String UPDATE_BLOG_ENTRY = "UPDATE OI_BG_ENTRY SET CATEGORY_ID = ?, TITLE = ?, STATUS = ?, ENTRY_EXCEPT = ?, ALLOW_COMMENTS = ?, EXPIRY_DATE = TO_TIMESTAMP(? , 'DD-MM-YYYY HH24:MI:SS.FF3') WHERE ENTRY_ID = ? AND BLOG_ID = ?";
	public static final String UPDATE_BLOG_ENTRY = "UPDATE OI_BG_ENTRY SET CATEGORY_ID = ?, TITLE = ?, STATUS = ?, ENTRY_EXCEPT = ?, ALLOW_COMMENTS = ?,ENTRY_BODY=EMPTY_CLOB() WHERE ENTRY_ID = ? AND BLOG_ID = ?";
	public static final String DELETE_BLOG_ENTRY = "DELETE FROM OI_BG_ENTRY WHERE ENTRY_ID = ? AND BLOG_ID = ?";
	public static final String GET_ALL_COMMENT = "SELECT COMMENT_ID, ENTRY_ID, CREATED_BY, MESSAGE FROM OI_BG_ENTRY_COMMENTS WHERE BLOG_ID = ? ORDER BY CREATED_ON ";
	public static final String DELETE_BLOG_COMMENT = "DELETE FROM OI_BG_ENTRY_COMMENTS WHERE COMMENT_ID = ? ";
	public static final String GET_BLOG_ENTRIES = "SELECT ENTRY_ID,TITLE,IS_FEATURED,STATUS,CREATED_BY FROM OI_BG_ENTRY WHERE BLOG_ID = ? ORDER BY CREATED_ON DESC";
	public static final String DELETE_BLOG_ENTRY_COMMENT = "DELETE FROM OI_BG_ENTRY_COMMENTS WHERE ENTRY_ID = ?"; 
	public static final String SET_BLOG_FEATURE = "UPDATE OI_BG_ENTRY SET IS_FEATURED = 'Y' WHERE ENTRY_ID = ? AND BLOG_ID = ? ";
	public static final String UNSET_BLOG_FEATURE = "UPDATE OI_BG_ENTRY SET IS_FEATURED = 'N' WHERE ENTRY_ID = ? AND BLOG_ID = ? ";
	public static final String DELETE_IMAGE = "UPDATE OI_BG_ENTRY SET IMAGE_NAME = '' WHERE ENTRY_ID = ? ";
	public static final String INSERT_NEW_TAG = "INSERT INTO OI_TAGS (TAG_ID, NAME) VALUES (SEQ_OI_BG_TAGID.NEXTVAL, ?)";
	public static final String CHECK_TAG = "SELECT tag_ID FROM oi_tags WHERE name = ?";
	//public static final String GET_TAG = "SELECT distinct a.tag_id tag_id, name FROM oi_tags a, OI_TAGS_MAP b WHERE a.tag_id = b.tag_id and b.MODULE_TYPE = 'BG'";
	public static final String GET_TAG = "SELECT tag_id, name FROM oi_tags order by UPPER(name)";
	public static final String GET_ENTRY_TAG = "SELECT a.tag_id tagId, name FROM oi_tags a, oi_tags_map b WHERE a.tag_id = b.tag_id AND b.MODULE_TYPE = 'BG' AND b.module_id = ?";
	public static final String INSERT_ENTRY_TAG = "INSERT INTO OI_TAGS_MAP (TAG_ID,MODULE_TYPE,MODULE_ID) VALUES (?, 'BG', ?)";
	public static final String DELETE_ENTRY_TAG = "DELETE FROM OI_TAGS_MAP WHERE MODULE_TYPE = 'BG' AND module_id = ?";
	public static final String GET_TAG_LIST = "SELECT TAG_ID FROM oi_tags ORDER BY name";
	public static final String GET_ALL_TAG = "SELECT * FROM ( SELECT ROWNUM AS NUM,TAG_ID,NAME FROM OI_TAGS ORDER BY NAME )WHERE NUM >= ? AND NUM <= ? ";
	public static final String GET_TAG_LIST_COUNT = "SELECT COUNT(TAG_ID) TOTAL FROM OI_TAGS";

	//	 Query to check whether the given user is an Author.
	public static final String CHECK_IS_BLOG_AUTHOR = "SELECT USERID FROM OI_BG_AUTHORS WHERE BLOG_ID=? AND USERID=? ";
	public static final String TOTAL_REC_COUNT1 = "SELECT COUNT(*) TOTAL FROM ( ";
	public static final String TOTAL_REC_COUNT2 = " ) ";
	
	// Query to get all the Tags
	public static final String GET_ALL_TAG_WITH_ENTRIES = " SELECT TAGS.TAG_ID,TAGS.NAME,COUNT(ENTRY.ENTRY_ID) ENTRIESCOUNT FROM OI_TAGS TAGS "
														+" LEFT JOIN OI_TAGS_MAP TMAP ON TMAP.MODULE_TYPE='BG' AND TMAP.TAG_ID=TAGS.TAG_ID "
														+" LEFT OUTER JOIN OI_BG_ENTRY ENTRY ON ENTRY.ENTRY_ID = TMAP.MODULE_ID AND UPPER(ENTRY.STATUS)='P' "
														+" GROUP BY TAGS.TAG_ID,TAGS.NAME ";
	
	public static final String UPDATE_CATEGORy = "UPDATE OI_BG_CATEGORY SET NAME=? WHERE CATEGORY_ID=?";
	
	
	public static final String CHECK_ENTRY_TITLE_EXISTS_1 = "SELECT COUNT(*) FROM OI_BG_ENTRY WHERE BLOG_ID = ? AND UPPER(TITLE) = UPPER(?)";
	
	public static final String CHECK_ENTRY_TITLE_EXISTS_2 = "SELECT COUNT(*) FROM OI_BG_ENTRY WHERE BLOG_ID = ? AND UPPER(TITLE) = UPPER(?) AND ENTRY_ID <> ?";
	
	public static final String GET_BLOG_NO_OF_POSTS = "SELECT NVL(NO_OF_POSTS_SHOW,4) AS NO_OF_POSTS_SHOW FROM OI_BG_BLOG WHERE BLOG_ID = ?";
	
	public static final String GET_ABOUT_ME = "select ABOUT_ME FROM OI_BG_AUTHORS WHERE USERID = ?";
	
	// Get Blog title
	public static final String QRY_GET_BLOG_TITLE = "SELECT TITLE FROM OI_BG_BLOG WHERE BLOG_ID = ?";
	
	
}