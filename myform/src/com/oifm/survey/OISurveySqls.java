package com.oifm.survey;

import com.oifm.common.OILabelConstants;

public interface OISurveySqls {

//	To get total number of surveys available
	public static final String	TOTAL_SURVEYS = "SELECT COUNT(SURVEYID) FROM OI_SU_SURVEY ";
	//added by edmund
	public static final String	TOTAL_DIVISION_SURVEYS = "SELECT COUNT(SURVEYID) FROM OI_SU_SURVEY where DIVISIONCODE = ?";

//	To get list of available surveys at admin level
	public static final String	CURRENT_SURVEYS	=	"SELECT OSS1.* FROM (SELECT ROWNUM RN, OSS.* FROM (SELECT SURVEYID, OSS.NAME, OSS.DESCRIPTION, TO_CHAR(START_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') START_ON, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_ON, SECURITY, PUBLISHED_ST, NVL(TO_CHAR(PUBLISHED_ON,'DD-Mon-YYYY'),'') PUBLISHEDON , Decode(REMINDER_MODE,'M',Decode(SECURITY,'Y',Decode(ACTIVE,'Y',Decode(greatest(sysdate,nvl(EXPIRY_ON,sysdate-1)),sysdate,'N',EXPIRY_ON,MAIL_STATUS),'N','N'),'N','N'),'A','N')  MAIL_STATUS, ACTIVE, NVL(OCM.shortname, NVL(OCM.DESCRIPTION, OSS.DIVISIONCODE)) || '<br/>('||NVL(OAP.NAME, OSS.CREATED_BY)|| ')' DIVISIONNAME, OSS.DIVISIONCODE, nvl(noOfRes,'0') noOfRes, TARGETAUDIENCE FROM OI_SU_SURVEY OSS, OI_AD_PROFILE OAP,(select CPSUID,count(*) noOfRes from OI_CPSU_DRAFTS draft where draft.DRAFT_TYPE like'S' and draft.STATUS='S' group by CPSUID) ORS , (SELECT VALUE, DESCRIPTION, shortname FROM OI_AD_CODE_MASTER WHERE TYPE = 'DIVISION_CODE') OCM  WHERE OSS.DIVISIONCODE = OCM.VALUE(+) AND OSS.CREATED_BY = OAP.USERID(+) and CPSUID(+)=SURVEYID ORDER BY SURVEYID DESC) OSS) OSS1 WHERE RN>=? AND RN <=?";
	//public static final String	CURRENT_SURVEYS	=	"SELECT OSS1.* FROM (SELECT ROWNUM RN, OSS.* FROM (SELECT SURVEYID, OSS.NAME, OSS.DESCRIPTION, TO_CHAR(START_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') START_ON, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_ON, SECURITY, PUBLISHED_ST, MAIL_STATUS, ACTIVE, NVL(OCM.DESCRIPTION, OSS.DIVISIONCODE) || '\n('||NVL(OAP.NAME, OSS.CREATED_BY)|| ')' DIVISIONNAME, OSS.DIVISIONCODE FROM OI_SU_SURVEY OSS, OI_AD_PROFILE OAP, (SELECT VALUE, DESCRIPTION FROM OI_AD_CODE_MASTER WHERE TYPE = 'DIVISION_CODE') OCM  WHERE OSS.DIVISIONCODE = OCM.VALUE(+) AND OSS.CREATED_BY = OAP.USERID(+) ORDER BY SURVEYID DESC) OSS) OSS1 WHERE RN>=? AND RN <=?";
	//added by edmund
	public static final String	CURRENT_SURVEYS_SORT_FRONT	=	"SELECT OSS1.* FROM (SELECT ROWNUM RN, OSS.* FROM (SELECT SURVEYID, OSS.NAME, OSS.DESCRIPTION, TO_CHAR(START_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') START_ON, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_ON, SECURITY, PUBLISHED_ST, NVL(TO_CHAR(PUBLISHED_ON,'DD-Mon-YYYY'),'') PUBLISHEDON , Decode(REMINDER_MODE,'M',Decode(SECURITY,'Y',Decode(ACTIVE,'Y',Decode(greatest(sysdate,nvl(EXPIRY_ON,sysdate-1)),sysdate,'N',EXPIRY_ON,MAIL_STATUS),'N','N'),'N','N'),'A','N') MAIL_STATUS, ACTIVE, NVL(OCM.shortname, NVL(OCM.DESCRIPTION, OSS.DIVISIONCODE)) || '<br/>('||NVL(OAP.NAME, OSS.CREATED_BY)|| ')' DIVISIONNAME, OSS.DIVISIONCODE, nvl(noOfRes,'0') noOfRes, TARGETAUDIENCE FROM OI_SU_SURVEY OSS, OI_AD_PROFILE OAP,(select CPSUID,count(*) noOfRes from OI_CPSU_DRAFTS draft where draft.DRAFT_TYPE like'S' and draft.STATUS='S' group by CPSUID) ORS , (SELECT VALUE, DESCRIPTION, shortname FROM OI_AD_CODE_MASTER WHERE TYPE = 'DIVISION_CODE') OCM  WHERE OSS.DIVISIONCODE = OCM.VALUE(+) AND OSS.CREATED_BY = OAP.USERID(+) and CPSUID(+)=SURVEYID ORDER BY ";
	public static final String	CURRENT_SURVEYS_SORT_BACK = " ) OSS) OSS1 WHERE RN>=? AND RN <=?";
	public static final String	SORT_MAIL_STATUS = " security desc ,active desc,";
	public static final String	CURRENT_SURVEYS_DIVISIONS_FRONT = "Select OSS2.* from (SELECT ROWNUM RN, OSS1.* FROM (SELECT OSS.* FROM (SELECT SURVEYID, OSS.NAME, OSS.DESCRIPTION, NVL(TO_CHAR(PUBLISHED_ON,'DD-Mon-YYYY'),'') PUBLISHEDON, TO_CHAR(START_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') START_ON, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_ON,SECURITY, PUBLISHED_ST, Decode(REMINDER_MODE,'M',Decode(SECURITY,'Y',Decode(ACTIVE,'Y',Decode(greatest(sysdate,nvl(EXPIRY_ON,sysdate-1)),sysdate,'N',EXPIRY_ON,MAIL_STATUS),'N','N'),'N','N'),'A','N') MAIL_STATUS, ACTIVE,NVL(OCM.shortname, NVL(OCM.DESCRIPTION, OSS.DIVISIONCODE)) || '<br/>('||NVL(OAP.NAME, OSS.CREATED_BY)|| ')' DIVISIONNAME,OSS.DIVISIONCODE, nvl(noOfRes,'0') noOfRes,  TARGETAUDIENCE FROM OI_SU_SURVEY OSS, OI_AD_PROFILE OAP,(select CPSUID,count(*)  noOfRes from OI_CPSU_DRAFTS draft where draft.DRAFT_TYPE like'S' and draft.STATUS='S' group by CPSUID) ORS , (SELECT VALUE, DESCRIPTION, shortName FROM OI_AD_CODE_MASTER WHERE TYPE = 'DIVISION_CODE') OCM WHERE OSS.DIVISIONCODE = OCM.VALUE(+) AND OSS.CREATED_BY = OAP.USERID(+) and CPSUID(+)=SURVEYID ORDER BY "; 
	public static final String	CURRENT_SURVEYS_DIVISIONS_BACK	=	" ) OSS)OSS1 WHERE DIVISIONCODE= ?) oss2 where RN>=? and RN<=?";
	public static final String	CURRENT_SURVEYS_DIVISIONS_LIST	=	"Select OSS2.* from (SELECT ROWNUM RN, OSS1.* FROM (SELECT OSS.* FROM (SELECT SURVEYID, OSS.NAME, OSS.DESCRIPTION, NVL(TO_CHAR(PUBLISHED_ON,'DD-Mon-YYYY'),'') PUBLISHEDON, TO_CHAR(START_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') START_ON, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_ON,SECURITY, PUBLISHED_ST, Decode(REMINDER_MODE,'M',Decode(SECURITY,'Y',Decode(ACTIVE,'Y',Decode(greatest(sysdate,nvl(EXPIRY_ON,sysdate-1)),sysdate,'N',EXPIRY_ON,MAIL_STATUS),'N','N'),'N','N'),'A','N') MAIL_STATUS, ACTIVE,NVL(OCM.shortname, NVL(OCM.DESCRIPTION, OSS.DIVISIONCODE)) || '<br/>('||NVL(OAP.NAME, OSS.CREATED_BY)|| ')' DIVISIONNAME,OSS.DIVISIONCODE, nvl(noOfRes,'0') noOfRes,  TARGETAUDIENCE FROM OI_SU_SURVEY OSS, OI_AD_PROFILE OAP,(select CPSUID,count(*)  noOfRes from OI_CPSU_DRAFTS draft where draft.DRAFT_TYPE like'S' and draft.STATUS='S' group by CPSUID) ORS , (SELECT VALUE, DESCRIPTION, shortName FROM OI_AD_CODE_MASTER WHERE TYPE = 'DIVISION_CODE') OCM WHERE OSS.DIVISIONCODE = OCM.VALUE(+) AND OSS.CREATED_BY = OAP.USERID(+) and CPSUID(+)=SURVEYID ORDER BY SURVEYID DESC ) OSS)OSS1 WHERE DIVISIONCODE=?) oss2 where RN>=? and RN<=?";
	public static final String	CURRENT_SURVEY_DIVISIONS	=	"SELECT distinct A.DIVISIONCODE DIVISIONCODE,B.DESCRIPTION DIVISIONNAME FROM OI_SU_SURVEY A,OI_AD_CODE_MASTER B WHERE B.TYPE='DIVISION_CODE' AND A.DIVISIONCODE=B.VALUE";
	
//	To get new survey id by admin
	public static final String	NEW_SURVEY_ID	=	"SELECT SEQ_OI_SU_SURVEYID.NEXTVAL FROM DUAL";

//	To insert survey basic information by admin
	public static final String	CREATE_SURVEY	=	"INSERT INTO OI_SU_SURVEY (SURVEYID, NAME, DESCRIPTION, INSTRUCTIONS, START_ON, EXPIRY_ON, SECURITY, REMINDER_MODE, PUBLISHED_ST, MAIL_STATUS, ACTIVE, CREATED_BY, CREATED_ON, SURVEYTAG, DIVISIONCODE,TARGETAUDIENCE,CONTACTPERSON,PHONE,EMAILADDRESS,COMPLETIONTIME,FINDING_PUBLISHED_PLANNED_DATE,FINDINGS_VIEW_TYPE,ACK_MODE,OPENTAG,TAG_WORDS,EMAILDATE,EMAILMESSAGE,IS_OUTSIDE_MOE) VALUES (?, ?, ?, ?, TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'),  TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'), ?, ?, 'N','S','N', ?, SYSDATE, SEQ_OI_SU_SURVEYTAG.NEXTVAL, ?,?,?,?,?,?,TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'),?,?,?,?,TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'),?,?)";


//	To Update survey basic information by admin
	public static final String	UPDATE_SURVEY	=	"UPDATE OI_SU_SURVEY SET  NAME = ?, DESCRIPTION = ?, INSTRUCTIONS = ?, START_ON = TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'), EXPIRY_ON = TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'), SECURITY = ?, REMINDER_MODE = ?, ACTIVE = ?, TARGETAUDIENCE=?,CONTACTPERSON=?,PHONE=?,EMAILADDRESS=?,COMPLETIONTIME=?,FINDING_PUBLISHED_PLANNED_DATE=TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'),FINDINGS_VIEW_TYPE=?,ACK_MODE=?,OPENTAG=?,TAG_WORDS=?,EMAILDATE=TO_DATE(?,'"+OILabelConstants.INPUT_DATE_FORMAT +"'),EMAILMESSAGE=?,IS_OUTSIDE_MOE=? WHERE SURVEYID = ? ";

//	To activate survey by admin
	public static final String	ACTIVATE_SURVEY	=	"UPDATE OI_SU_SURVEY SET ACTIVE = 'Y' WHERE SURVEYID = ? ";

//	To get the corresponding division code for specific survey
	public static final String	IS_SURVEY_DIVISION	=	"SELECT DIVISIONCODE FROM OI_SU_SURVEY WHERE SURVEYID = ? AND DIVISIONCODE = ?  ";//AND PUBLISHED_ST = 'N'";

//	To get survey basic information by admin
	public static final String	SURVEY_DETAILS	=	"SELECT NAME, DESCRIPTION, INSTRUCTIONS, TO_CHAR(START_ON,'"+OILabelConstants.DISPLAY_DATE_FORMAT+"') START_ON, TO_CHAR(EXPIRY_ON,'"+OILabelConstants.DISPLAY_DATE_FORMAT+"') EXPIRY_ON, SECURITY, SUMMARY, ATTACHED_FILE, PUBLISHED_ST, MAIL_STATUS, REMINDER_MODE, ACK_MODE, ACTIVE, DIVISIONCODE,TARGETAUDIENCE,CONTACTPERSON,PHONE,EMAILADDRESS,COMPLETIONTIME,TO_CHAR(FINDING_PUBLISHED_PLANNED_DATE,'"+OILabelConstants.DISPLAY_DATE_FORMAT+"') FINDING_PUBLISHED_PLANNED_DATE,FINDINGS_VIEW_TYPE,OPENTAG,TAG_WORDS,TO_CHAR(EMAILDATE,'"+OILabelConstants.DISPLAY_DATE_FORMAT+"') EMAILDATE,EMAILMESSAGE,IS_OUTSIDE_MOE FROM OI_SU_SURVEY WHERE SURVEYID = ? ";

//	To get the Survey related label values from code master
	public static final String	EXTRACT_LABEL_VALUES	=	"SELECT VALUE, DESCRIPTION FROM OI_AD_CODE_MASTER WHERE TYPE in (?,?) ";

//	To Update Survey Publish informarion by admin
	public static final String	UPDATE_SURVEY_PUBLISH	=	"UPDATE OI_SU_SURVEY SET SUMMARY = ?, ATTACHED_FILE = ?, ACK_MODE = ?, PUBLISHED_ST = ?, PUBLISHED_ON = SYSDATE WHERE SURVEYID = ? ";
	public static final String UPDATE_SURVEY_PUBLISH_WO_FILE = "UPDATE OI_SU_SURVEY SET SUMMARY = ?, ACK_MODE = ?, PUBLISHED_ST = ?, PUBLISHED_ON = SYSDATE WHERE SURVEYID = ? ";

//	To remove Survey Publish attachement info by admin
	public static final String	RESET_SURVEY_PUBLISH_ATTCHMENT	=	"UPDATE OI_SU_SURVEY SET ATTACHED_FILE = '' WHERE SURVEYID = ? ";

//	To Delete survey basic information by admin. Admin should not delete any info during publish period.
	//public static final String	DELETE_SURVEY	=	"DELETE OI_SU_SURVEY WHERE SURVEYID = ? AND SYSDATE NOT BETWEEN START_ON AND EXPIRY_ON ";
	public static final String	DELETE_SURVEY	=	"DELETE OI_SU_SURVEY WHERE SURVEYID = ? ";

//	To check whether admin can Delete survey information or not. Admin should not delete any info during publish period.
	//public static final String	CHECK_DELETE_SURVEY	=	"SELECT SURVEYID FROM OI_SU_SURVEY WHERE SURVEYID = ? AND SYSDATE NOT BETWEEN START_ON AND EXPIRY_ON ";
	public static final String	CHECK_DELETE_SURVEY	=	"SELECT * FROM OI_SU_SURVEY WHERE SURVEYID = ? AND (SYSDATE NOT BETWEEN START_ON AND EXPIRY_ON  OR ACTIVE='N')";

//	To get list of sections available for survey
//	anbu new

	//public static final String	SURVEY_SECTIONS_LIST	=	"SELECT DISTINCT SECTIONID FROM OI_SU_QUESTIONS  WHERE SURVEYID = ? ORDER BY SECTIONID";
	
	public static final String	SURVEY_SECTIONS_LIST	=	"SELECT SECTIONID FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID ORDER SIBLINGS BY SECTIONID";

//	To get list of sections available for survey
	public static final String	SECTION_PARENTS_LIST	=	"SELECT SECTIONID, LPAD(NAME,LENGTH(NAME) + 2*(LEVEL-1),'.') NAME FROM (SELECT SECTIONID,  PARENTID, NAME FROM VW_OI_SECTION_LEVEL WHERE SURVEYID = ? MINUS SELECT B.SECTIONID,  B.PARENTID, B.NAME FROM OI_SU_SECTIONS B CONNECT BY PRIOR B.SECTIONID = B.PARENTID START WITH B.SECTIONID = ?) CONNECT BY PRIOR SECTIONID = PARENTID START WITH PARENTID IS NULL ORDER SIBLINGS BY SECTIONID";

//	To get sections hierarchy available for survey
	public static final String	SURVEY_SECTIONS_HIERARCHY	=	"SELECT SECTIONID, LEVEL, NAME FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID ORDER SIBLINGS BY SECTIONID";

//	To insert new section for survey
	public static final String	CREATE_SECTION	=	"INSERT INTO OI_SU_SECTIONS (SECTIONID, SURVEYID, PARENTID, NAME, INSTRUCTIONS,DESCRIPTION) VALUES (SEQ_OI_SU_SECTIONID.NEXTVAL, ?, ?, ?, ?, ?)";

//	To get section deatils for survey
	public static final String	SECTION_DETAILS	=	"SELECT SURVEYID, SECTIONID, PARENTID, NAME, INSTRUCTIONS, DESCRIPTION FROM OI_SU_SECTIONS WHERE SECTIONID = ? ";
	//ANBU
	//public static final String	SECTION_DETAILS	=	"SELECT SURVEYID, SECTIONID, PARENTID, NAME, INSTRUCTIONS, DESCRIPTION FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID ORDER SIBLINGS BY SECTIONID";

//	To update new section for survey
	public static final String	UPDATE_SECTION	=	"UPDATE OI_SU_SECTIONS SET PARENTID = ?, NAME = ?, INSTRUCTIONS = ?, DESCRIPTION = ? WHERE SECTIONID = ?";

//	To delete section for survey
	public static final String	DELETE_SECTION	=	"DELETE OI_SU_SECTIONS WHERE SECTIONID = ?";

//	To delete all sections for survey
	public static final String	DELETE_ALL_SECTIONS	=	"DELETE OI_SU_SECTIONS WHERE SURVEYID = ?";


//	To get list of Questions with sections available for survey
	public static final String	SURVEY_QUESTIONS_LIST	=	"SELECT SECTIONID, QUESTIONID, QUESTION, USE_LIKERT, OI_PKG.CAN_REORDER(SURVEYID,QUESTIONID,'-1') CAN_MOVE_UP, OI_PKG.CAN_REORDER(SURVEYID,QUESTIONID,'1') CAN_MOVE_DOWN FROM OI_SU_QUESTIONS WHERE SURVEYID = ? ORDER BY SECTIONID, nvl(QUESTIONORDER,QUESTIONID)";

//	To get list of Questions with sections available for survey
	public static final String	SURVEY_QUESTIONS_ANSWERS_LIST	= "SELECT SECTIONID, QUESTIONID, QUESTION, INSTRUCTIONS, TYPE, NEEDOTHERREMARK, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10, USE_LIKERT FROM OI_SU_QUESTIONS WHERE SURVEYID = ? ORDER BY SECTIONID, nvl(QUESTIONORDER,QUESTIONID) ";
	
//	To get Question template data under specific section
	public static final String	TEMPLATE_QUESTION_DETAILS	=	"SELECT SURVEYID, SECTIONID, '' QUESTION, '' INSTRUCTIONS, TYPE, NEEDOTHERREMARK, MANDATORY, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10, USE_LIKERT FROM OI_SU_QUESTIONS WHERE QUESTIONID = (SELECT MAX(nvl(QUESTIONORDER,QUESTIONID)) FROM OI_SU_QUESTIONS WHERE SECTIONID = ? ) ";

//	To insert new Question for survey under selected section
	public static final String	CREATE_QUESTION	=	"INSERT INTO OI_SU_QUESTIONS (QUESTIONID, SURVEYID, SECTIONID, QUESTION, INSTRUCTIONS, TYPE, NEEDOTHERREMARK, MANDATORY, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10, USE_LIKERT) VALUES  (SEQ_OI_SU_QUESTIONID.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

//	To get Question deatils for survey
	public static final String	QUESTION_DETAILS	=		"SELECT SURVEYID, SECTIONID, QUESTION, INSTRUCTIONS, TYPE, NEEDOTHERREMARK, MANDATORY, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10,USE_LIKERT FROM OI_SU_QUESTIONS WHERE QUESTIONID = ? ";

	public static final String	PREV_QUESTION_DETAILS	=		"SELECT QUESTIONID,SURVEYID, SECTIONID, QUESTION, INSTRUCTIONS, TYPE, NEEDOTHERREMARK, MANDATORY, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10,USE_LIKERT FROM OI_SU_QUESTIONS WHERE QUESTIONID = OI_PKG.GET_PREV_SU_QUESTION_ID(?,?) ";

//	To Update section for survey
	public static final String	UPDATE_QUESTION	=	"UPDATE OI_SU_QUESTIONS SET SECTIONID = ?, QUESTION = ?, INSTRUCTIONS = ?, TYPE = ?, NEEDOTHERREMARK = ?, MANDATORY = ?, ANSWER1 = ?, ANSWER2 = ?, ANSWER3 = ?, ANSWER4 = ?, ANSWER5 = ?, ANSWER6 = ?, ANSWER7 = ?, ANSWER8 = ?, ANSWER9 = ?, ANSWER10  = ?, USE_LIKERT = ? WHERE QUESTIONID = ? ";

//	To delete question for survey
	public static final String	DELETE_QUESTION	=	"DELETE OI_SU_QUESTIONS WHERE QUESTIONID = ?";

//	To delete all Question under specific section for survey
	public static final String	DELETE_SECTION_QUESTIONS	=	"DELETE OI_SU_QUESTIONS WHERE SECTIONID = ?";

//	To delete all Question under specific survey
	public static final String	DELETE_SURVEY_QUESTIONS	=	"DELETE OI_SU_QUESTIONS WHERE SURVEYID = ?";

//	To get list of Surveys to generate temporary user IDs
	public static final String	SURVEYS_LIST_TEMP_USERS	=	"SELECT LTRIM(TO_CHAR(SURVEYTAG, '0000')) SURVEYID, NAME FROM OI_SU_SURVEY WHERE SECURITY = 'N' AND NVL(PUBLISHED_ST, 'N') = 'N' AND DIVISIONCODE= ?";

//	To get batch list for specific survey
	public static final String	SURVEY_BATCHS_LIST	=	"SELECT DISTINCT BATCHNO FROM OI_SU_TEMPSURVEYUSER WHERE SURVEYTAG = ? ";
	
//	To get list of temporary userids for specific survey
	public static final String	SURVEY_TEMP_USERS_LIST	=	"SELECT TEMPSURVEYUSERID, PASSWORD, NVL(OBSOLETE, 'N') OBSOLETE FROM OI_SU_TEMPSURVEYUSER WHERE SURVEYTAG = ? AND BATCHNO = ? ";

//	To get the latest batch for specific survey
	public static final String	SURVEY_NEW_BATCH	=	"SELECT LTRIM(TO_CHAR(NVL(TO_NUMBER(MAX(BATCHNO)),0) +1, '000')) BATCHNO FROM OI_SU_TEMPSURVEYUSER WHERE SURVEYTAG = ? ";

//	To insert set of temporary userids for specific survey
	public static final String	SURVEY_INSERT_TEMP_USERS	=	"INSERT INTO OI_SU_TEMPSURVEYUSER (TEMPSURVEYUSERID, SURVEYTAG, BATCHNO, PASSWORD)  VALUES (?, ?, ?, ?)";

//	To delete temporary userids for specific Batch & Survey
	public static final String	SURVEY_DELETE_TEMP_USERS	=	"DELETE FROM OI_SU_TEMPSURVEYUSER WHERE SURVEYTAG = ? AND BATCHNO = ? ";

//	To Delete response for specific survey Responses 
	public static final String	DELETE_SURVEY_RESPONSES	=	"DELETE OI_SU_RESPONSE WHERE QUESTIONID IN (SELECT QUESTIONID FROM OI_SU_QUESTIONS WHERE SURVEYID = ?)";

//	To Delete response for specific section Responses
	public static final String	DELETE_SECTION_RESPONSES	=	"DELETE OI_SU_RESPONSE WHERE QUESTIONID IN (SELECT QUESTIONID FROM OI_SU_QUESTIONS WHERE SECTIONID = ?)";
	
//	To Delete response for specific Question Responses
	public static final String	DELETE_QUESTION_RESPONSES	=	"DELETE OI_SU_RESPONSE WHERE QUESTIONID = ?";
	
//	To Delete response for specific Question Responses
	public static final String	DELETE_DRAFT_INFO	=	"delete OI_CPSU_DRAFTS where DRAFT_TYPE = 'S' AND CPSUID = ?";
	
	// To delete survey members
	public static final String DELETE_MEMBERS = "DELETE OI_SU_MEMBERS WHERE SURVEYID = ?";
	
//modify by edmund	
//	To get the all responses for specific survey (GDS Users)
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, DIVISIONCODE, SCHOOLCODE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND OSR.USERID = OAP.USERID ORDER BY OSR.USERID, OSQ.QUESTIONID";
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID,RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME,SCHOOLNAME SCHOOLCODE, cdMaster.description DIVISIONCODE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and UPPER(OAP.USERID)  in (select UPPER(userid) from OI_CPSU_DRAFTS draft where draft.CPSUID=?  and draft.DRAFT_TYPE like'S' and draft.STATUS='S') and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) ORDER BY OSR.USERID, OSQ.QUESTIONID";
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID,RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE, cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and UPPER(OAP.USERID)  in (select UPPER(userid) from OI_CPSU_DRAFTS draft where draft.CPSUID=?  and draft.DRAFT_TYPE like'S' and draft.STATUS='S') and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+) ORDER BY NICKNAME,USERID, SECTIONID,OSQ.QUESTIONID";
	
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID,decode(RESPONSE1,'Y','1',RESPONSE1) RESPONSE1 , decode(RESPONSE2,'Y','2',RESPONSE2) RESPONSE2 ,decode(RESPONSE3,'Y','3',RESPONSE3) RESPONSE3 , decode(RESPONSE4,'Y','4',RESPONSE4) RESPONSE4 ,decode(RESPONSE5,'Y','5',RESPONSE5) RESPONSE5 , decode(RESPONSE6,'Y','6',RESPONSE6) RESPONSE6 ,decode(RESPONSE7,'Y','7',RESPONSE7) RESPONSE7 , decode(RESPONSE8,'Y','8',RESPONSE8) RESPONSE8 ,decode(RESPONSE9,'Y','9',RESPONSE9) RESPONSE9 , decode(RESPONSE10,'Y','10',RESPONSE10) RESPONSE10,OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR,OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and UPPER(OAP.USERID)in (select UPPER(userid) from OI_CPSU_DRAFTS draft where draft.CPSUID=?  and draft.DRAFT_TYPE like'S' and draft.STATUS='S') and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+) ORDER BY NICKNAME,USERID, SECTIONID,OSQ.QUESTIONID";
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID,decode(RESPONSE1,'Y','1',RESPONSE1) RESPONSE1 , decode(RESPONSE2,'Y','2',RESPONSE2) RESPONSE2 ,decode(RESPONSE3,'Y','3',RESPONSE3) RESPONSE3 , decode(RESPONSE4,'Y','4',RESPONSE4) RESPONSE4 ,decode(RESPONSE5,'Y','5',RESPONSE5) RESPONSE5 , decode(RESPONSE6,'Y','6',RESPONSE6) RESPONSE6 ,decode(RESPONSE7,'Y','7',RESPONSE7) RESPONSE7 , decode(RESPONSE8,'Y','8',RESPONSE8) RESPONSE8 ,decode(RESPONSE9,'Y','9',RESPONSE9) RESPONSE9 , decode(RESPONSE10,'Y','10',RESPONSE10) RESPONSE10,OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+) ORDER BY NICKNAME,USERID, SECTIONID,OSQ.QUESTIONID";
	//Modified by Zhao Yu
	//public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID,decode(RESPONSE1,'Y','1',RESPONSE1) RESPONSE1 , decode(RESPONSE2,'Y','2',RESPONSE2) RESPONSE2 ,decode(RESPONSE3,'Y','3',RESPONSE3) RESPONSE3 , decode(RESPONSE4,'Y','4',RESPONSE4) RESPONSE4 ,decode(RESPONSE5,'Y','5',RESPONSE5) RESPONSE5 , decode(RESPONSE6,'Y','6',RESPONSE6) RESPONSE6 ,decode(RESPONSE7,'Y','7',RESPONSE7) RESPONSE7 , decode(RESPONSE8,'Y','8',RESPONSE8) RESPONSE8 ,decode(RESPONSE9,'Y','9',RESPONSE9) RESPONSE9 , decode(RESPONSE10,'Y','10',RESPONSE10) RESPONSE10,OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_CPSU_DRAFTS d,OI_AD_CODE_MASTER cdMaster,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and d.status = 'S' and d.cpsuid=OSQ.SURVEYID and d.userid=OSR.USERID and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+) ORDER BY OSR.RESPONSE_ON, NICKNAME,USERID, SECTIONID,NVL(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";
	public static final String SURVEY_RESPONSES = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID," +
	"decode(RESPONSE1,'Y','1',replace(replace(RESPONSE1,chr(10),''),chr(13),'')) RESPONSE1 , " +
	"decode(RESPONSE2,'Y','2',replace(replace(RESPONSE2,chr(10),''),chr(13),'')) RESPONSE2 ," +
	"decode(RESPONSE3,'Y','3',replace(replace(RESPONSE3,chr(10),''),chr(13),'')) RESPONSE3 , " +
	"decode(RESPONSE4,'Y','4',replace(replace(RESPONSE4,chr(10),''),chr(13),'')) RESPONSE4 ," +
	"decode(RESPONSE5,'Y','5',replace(replace(RESPONSE5,chr(10),''),chr(13),'')) RESPONSE5 , " +
	"decode(RESPONSE6,'Y','6',replace(replace(RESPONSE6,chr(10),''),chr(13),'')) RESPONSE6 ," +
	"decode(RESPONSE7,'Y','7',replace(replace(RESPONSE7,chr(10),''),chr(13),'')) RESPONSE7 , " +
	"decode(RESPONSE8,'Y','8',replace(replace(RESPONSE8,chr(10),''),chr(13),'')) RESPONSE8 ," +
	"decode(RESPONSE9,'Y','9',replace(replace(RESPONSE9,chr(10),''),chr(13),'')) RESPONSE9 , " +
	"decode(RESPONSE10,'Y','10',replace(replace(RESPONSE10,chr(10),''),chr(13),'')) RESPONSE10," +
	"OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service," +
	"CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, " +
	"OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_CPSU_DRAFTS d,OI_AD_CODE_MASTER cdMaster," +
	"OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? " +
	"AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and d.status = 'S' " +
	"and d.cpsuid=OSQ.SURVEYID and d.userid=OSR.USERID and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE " +
	"and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) " +
	"and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) " +
	"AND OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) " +
	"AND OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+) " +
	"ORDER BY NICKNAME,USERID, SECTIONID,NVL(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";	
	//	To get the all responses for specific survey (Temp Users)
	public static final String SURVEY_RESPONSES_TUSER = "SELECT OSR.USERID, OSQ.QUESTIONID, OSQ.TYPE, RESPONSEID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, OSR.USERID NICKNAME, '' DIVISIONCODE, '' SCHOOLCODE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE_TUSER OSR WHERE OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND OSQ.SURVEYID = ? ORDER BY OSR.RESPONSE_ON, OSR.USERID, NVL(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";
	
//	To get list of Question IDs for specific survey 
	public static final String SURVEY_QUESTION_IDS = "SELECT DISTINCT RN, OSQ.QUESTIONID,OSQ.SECTIONID,OSQ.QUESTIONORDER FROM OI_SU_QUESTIONS OSQ, (SELECT ROWNUM RN, SECTIONID, LEVEL LEV FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID) OSS WHERE  OSS.SECTIONID = OSQ.SECTIONID order by OSQ.SECTIONID,nvl(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";

//	To get the respondents name and email
	public static final String SURVEY_RESPONDENTS = "SELECT DISTINCT b.name name,b.emailid emailaddress FROM oi_su_response a,  oi_ad_profile b , oi_su_questions c ,OI_CPSU_DRAFTS d WHERE  a.USERID = b.USERID AND c.surveyid = ? AND c.questionid=a.questionid AND d.cpsuid=c.surveyid and d.userid=a.userid AND d.status = 'S' ";
	
	
	public static final String	GET_SURVEY_TITLE = "select name title from OI_SU_SURVEY where surveyId = ?";
	// Added by edmund
//  To get the respondents age
	//public static final String SURVEY_RESPONDENTS_AGE = "Select Description, TOTAL_RESPONSES from VW_OI_SURVEY_AGE_SUMMARY where surveyid = ?";
	public static final String SURVEY_RESPONDENTS_AGE =	"SELECT AGE_DESC DESCRIPTION, COUNT(*) TOTAL_RESPONSES FROM VW_OI_SURVEY_SUMMARY WHERE SURVEYID=? GROUP BY AGE_DESC";
//  To get the respondents school level
	//public static final String SURVEY_RESPONDENTS_LEVEL = "Select Description, TOTAL_RESPONSES from VW_OI_SURVEY_SCHLVL_SUMMARY where surveyid = ?";
	public static final String SURVEY_RESPONDENTS_LEVEL =	"SELECT SCHLVL_DESC DESCRIPTION, COUNT(*) TOTAL_RESPONSES FROM VW_OI_SURVEY_SUMMARY WHERE SURVEYID=? GROUP BY SCHLVL_DESC";
//  To get the respondents year in service
	//public static final String SURVEY_RESPONDENTS_YEAR = "Select Description, TOTAL_RESPONSES from VW_OI_SURVEY_YRSSVC_SUMMARY where surveyid = ?";
	public static final String SURVEY_RESPONDENTS_YEAR = "SELECT JOINDT_DESC DESCRIPTION, COUNT(*) TOTAL_RESPONSES FROM VW_OI_SURVEY_SUMMARY WHERE SURVEYID=? GROUP BY JOINDT_DESC";
//  To get the respondents designation
	//public static final String SURVEY_RESPONDENTS_DESIGNATION = "Select Description, TOTAL_RESPONSES from VW_OI_SURVEY_DESIG_SUMMARY where surveyid = ?";
	public static final String SURVEY_RESPONDENTS_DESIGNATION = "SELECT DESIG_DESC DESCRIPTION, COUNT(*) TOTAL_RESPONSES FROM VW_OI_SURVEY_SUMMARY WHERE SURVEYID=? GROUP BY DESIG_DESC";
//	To get the school level
	public static final String SCHOOL_LEVEL = "select distinct value,description from OI_AD_CODE_MASTER a, OI_AD_PROFILE b where type='SCHOOL_LEVEL' and nvl(a.obsolete,'N')='N' and a.value=b.SCHOOLLVLCODE order by description";
	
//	To get the designation
	public static final String DESIGNATION = "select distinct value,description from OI_AD_CODE_MASTER a, OI_AD_PROFILE b where type='DESIGNATION_CODE' and nvl(a.obsolete,'N')='N' and a.value=b.designationcode order by description";

//	Detail report - front query
	//public static final String DETAIL_FRONT = "select questionid,question, answer1, answer2, answer3,answer4, answer5 , answer6, answer7, answer8, answer9, answer10,NEEDOTHERREMARK, count(response1) response1Count, count(response2) response2Count, count(response3) response3Count, count(response4) response4Count,  count(response5) response5Count, count(response6) response6Count, count(response7) response7Count, count(response8) response8Count, count(response9) response9Count, count(response10) response10Count, count(otherremarks) oRemarksCount from ( SELECT OSR.USERID, OSQ.QUESTIONID,OSQ.QUESTION, OSQ.ANSWER1, OSQ.ANSWER2,OSQ.ANSWER3,OSQ.ANSWER4,OSQ.ANSWER5,OSQ.ANSWER6,OSQ.ANSWER7,OSQ.ANSWER8,OSQ.ANSWER9,OSQ.ANSWER10, OSQ.NEEDOTHERREMARK, OSQ.TYPE, RESPONSEID,RESPONSE1,RESPONSE2 ,RESPONSE3 , RESPONSE4 ,RESPONSE5, RESPONSE6 ,RESPONSE7, RESPONSE8 , RESPONSE9 , RESPONSE10, OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND  OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND  OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+)";
	public static final String DETAIL_FRONT = "select questionid,question, answer1, answer2, answer3,answer4, answer5 , answer6, answer7, answer8, answer9, answer10,NEEDOTHERREMARK, count(response1) response1Count, count(response2) response2Count, count(response3) response3Count, count(response4) response4Count,  count(response5) response5Count, count(response6) response6Count, count(response7) response7Count, count(response8) response8Count, count(response9) response9Count, count(response10) response10Count, count(otherremarks) oRemarksCount from ( SELECT OSR.USERID, OSQ.QUESTIONID,OSQ.QUESTION, OSQ.ANSWER1, OSQ.ANSWER2,OSQ.ANSWER3,OSQ.ANSWER4,OSQ.ANSWER5,OSQ.ANSWER6,OSQ.ANSWER7,OSQ.ANSWER8,OSQ.ANSWER9,OSQ.ANSWER10, OSQ.NEEDOTHERREMARK, OSQ.TYPE, RESPONSEID,RESPONSE1,RESPONSE2 ,RESPONSE3 , RESPONSE4 ,RESPONSE5, RESPONSE6 ,RESPONSE7, RESPONSE8 , RESPONSE9 , RESPONSE10, OTHERREMARKS, NVL(NAME,OSR.USERID) NICKNAME, SCHOOLNAME SCHOOLCODE,cdMaster.description DIVISIONCODE,ROUND((SYSDATE - BIRTH_DT)/(365)) age,ROUND((SYSDATE - JOINING_DT)/(365)) service,CDDESIGNATION.DESCRIPTION Designation, emailid,SCHLVL.DESCRIPTION SCHOOL_TYPE FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR, OI_AD_PROFILE OAP,OI_AD_SCHOOLS schools, OI_AD_CODE_MASTER cdMaster,OI_CPSU_DRAFTS d,OI_AD_CODE_MASTER CDDESIGNATION,OI_AD_CODE_MASTER SCHLVL WHERE  OSQ.SURVEYID = ? AND d.status='S' AND d.cpsuid=OSQ.SURVEYID AND d.draft_type='S' and d.userid=OSR.USERID AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(OSR.USERID) = UPPER(OAP.USERID) and schools.SCHOOLCODE(+)=OAP.SCHOOLCODE and  (cdMaster.TYPE='DIVISION_CODE' OR cdMaster.TYPE is NULL) and DIVISIONCODE = cdMaster.VALUE(+) and (CDDESIGNATION.TYPE='DESIGNATION_CODE' OR CDDESIGNATION.TYPE IS NULL) AND  OAP.DESIGNATIONCODE = CDDESIGNATION.VALUE(+) AND (SCHLVL.TYPE='SCHOOL_LEVEL' OR SCHLVL.TYPE IS NULL) AND  OAP.SCHOOLLVLCODE=SCHLVL.VALUE(+)";
//	Detail report - end query
	public static final String DETAIL_END = ")group by questionid ,question,answer1, answer2, answer3,answer4, answer5 , answer6, answer7, answer8, answer9, answer10, NEEDOTHERREMARK";
	
	//Added by Oscar @ 21 June 2007
	//Detail report - number of question respondents
	public static final String NUMBER_OF_QUESTION_RESPONDENTS = "SELECT Q.QUESTIONID, COUNT(*) AS COUNT FROM OI_SU_SURVEY S, OI_SU_QUESTIONS Q, OI_SU_RESPONSE R, OI_CPSU_DRAFTS D WHERE S.SURVEYID = Q.SURVEYID AND Q.QUESTIONID = R.QUESTIONID AND D.DRAFT_TYPE='S' AND D.STATUS = 'S' AND D.CPSUID = S.SURVEYID AND D.USERID = R.USERID AND S.SURVEYID = ? GROUP BY Q.QUESTIONORDER, Q.QUESTIONID ORDER BY NVL(Q.QUESTIONORDER,Q.QUESTIONID)";
	
//	Detail report - age selection
	public static final String DETAIL_AGE_BELOW_30 = " and ROUND((SYSDATE - BIRTH_DT)/(365)) <30 ";
	public static final String DETAIL_AGE_30_40 = " and ROUND((SYSDATE - BIRTH_DT)/(365)) between 30 and 40 ";
	public static final String DETAIL_AGE_ABOVE_40 = " and ROUND((SYSDATE - BIRTH_DT)/(365)) >40 ";
	
//	Detail report - level selection
	public static final String DETAIL_LEVEL = " and OAP.SCHOOLLVLCODE = ? ";
	
//	Detail report - designation selection
	public static final String DETAIL_DESIGNATION = " and OAP.DESIGNATIONCODE = ? ";
	
//	Detail report - year selection
	public static final String DETAIL_YEAR_BELOW_3 = " and ROUND((SYSDATE - JOINING_DT)/(365)) < 3 ";
	public static final String DETAIL_YEAR_3_TO_5 = " and ROUND((SYSDATE - JOINING_DT)/(365)) between 3 and 5 ";
	public static final String DETAIL_YEAR_5_t0_10 = " and ROUND((SYSDATE - JOINING_DT)/(365)) between 5 and 10 ";
	public static final String DETAIL_YEAR_ABOVE_10 = " and ROUND((SYSDATE - JOINING_DT)/(365)) > 10 ";
	
//	To get total user number
	//public static final String TOTAL_USER = "select count(distinct userid) total from oi_su_response a,oi_su_questions b where a.questionid = b.questionid and surveyid= ?";
	public static final String TOTAL_USER =	"select count(*) total from oi_cpsu_drafts where draft_type='S' and status='S' and cpsuid=?";
	
	
//	To get total user number
	public static final String OPEN_END_QUESTION = "select distinct OTHERREMARKS from oi_su_response where questionid=?";
	
	public static final String OPEN_END_QUESTION_NAME = "SELECT QUESTION FROM OI_SU_QUESTIONS WHERE QUESTIONID =?";
	
	// Ended by edmund
	
	public static final String GET_NUMBER_OF_QUESTION_RESPONDENT = "";
	
						/************	WEB USER INTERFACE		************/

//	Current Surveys based on ACL (Incase of public, private surveys)
	//public static final String	USER_CURRENT_SURVEYS	=	"SELECT OS.SURVEYID, NAME, DESCRIPTION, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_DATE, EXPIRY_ON, DECODE(STATUS, 'D', '"+OISurveyConstants.DRAFT+"', 'S', '"+OISurveyConstants.SUBMITTED +"', '"+OISurveyConstants.NEW +"') STATUS, SECURITY FROM OI_SU_SURVEY OS, (SELECT SURVEYID, USERID FROM OI_SU_MEMBERS WHERE USERID = ? ) OM, (SELECT CPSUID, STATUS FROM OI_CPSU_DRAFTS WHERE DRAFT_TYPE = '"+OISurveyConstants.SURVEY_DOC+"' AND USERID = ?) OD  WHERE OS.SURVEYID = OD.CPSUID(+) AND OS.SURVEYID = OM.SURVEYID(+) AND NVL(PUBLISHED_ST,'N') = 'N' AND OS.ACTIVE = 'Y' AND ((OM.USERID = ? AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') AND TRUNC(SYSDATE) BETWEEN START_ON AND EXPIRY_ON ORDER BY EXPIRY_ON DESC, OS.SURVEYID DESC";
	//public static final String	USER_CURRENT_SURVEYS	=	"select * from( SELECT OS.SURVEYID, NAME, DESCRIPTION, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_DATE, EXPIRY_ON, DECODE(STATUS, 'D', '"+OISurveyConstants.DRAFT+"', 'S', '"+OISurveyConstants.SUBMITTED +"', '"+OISurveyConstants.NEW +"') STATUS, SECURITY FROM OI_SU_SURVEY OS, (SELECT SURVEYID, USERID FROM OI_SU_MEMBERS WHERE UPPER(USERID) = UPPER(?) ) OM, (SELECT CPSUID, STATUS FROM OI_CPSU_DRAFTS WHERE DRAFT_TYPE = '"+OISurveyConstants.SURVEY_DOC+"' AND UPPER(USERID) = UPPER(?)) OD WHERE OS.SURVEYID = OD.CPSUID(+) AND OS.SURVEYID = OM.SURVEYID(+) AND NVL(PUBLISHED_ST,'N') = 'N' AND OS.ACTIVE = 'Y' AND ((UPPER(OM.USERID )= UPPER(?) AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') AND TRUNC(SYSDATE) BETWEEN START_ON AND EXPIRY_ON group by SECURITY,EXPIRY_ON, os.SURVEYID, NAME, DESCRIPTION, STATUS) order by SECURITY desc,EXPIRY_ON ";
	public static final String	USER_CURRENT_SURVEYS	=	"SELECT * FROM (SELECT OS.SURVEYID, NAME, DESCRIPTION, TO_CHAR(EXPIRY_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') EXPIRY_DATE, EXPIRY_ON, DECODE(STATUS, 'D', '"+OISurveyConstants.DRAFT+"', 'S', '"+OISurveyConstants.SUBMITTED +"', '"+OISurveyConstants.NEW +"') STATUS, SECURITY FROM OI_SU_SURVEY OS, (SELECT CPSUID, STATUS FROM OI_CPSU_DRAFTS WHERE DRAFT_TYPE = '"+OISurveyConstants.SURVEY_DOC+"' AND UPPER(USERID) = UPPER(?)) OD WHERE OS.SURVEYID = OD.CPSUID(+) AND NVL(PUBLISHED_ST,'N') = 'N' AND OS.ACTIVE = 'Y' AND ((OI_PKG.IS_SU_MEMBER(OS.SURVEYID, ?) > 0 AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') AND TRUNC(SYSDATE) BETWEEN START_ON AND EXPIRY_ON GROUP BY SECURITY,EXPIRY_ON, os.SURVEYID, NAME, DESCRIPTION, STATUS) ORDER BY SECURITY DESC,EXPIRY_ON";
	
//	Past surveys based on ACL  (Incase of public, private surveys)
	//public static final String	USER_PAST_SURVEYS	=	"SELECT OS.SURVEYID, NAME, DESCRIPTION, TO_CHAR(PUBLISHED_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') PUBLISHED_DATE, PUBLISHED_ON,SECURITY FROM OI_SU_SURVEY OS, (SELECT SURVEYID, USERID FROM OI_SU_MEMBERS WHERE UPPER(USERID) = UPPER(?) ) OM WHERE OS.SURVEYID = OM.SURVEYID(+) AND OS.PUBLISHED_ST = 'Y' AND OS.ACTIVE = 'Y' AND ((UPPER(OM.USERID) = UPPER(?) AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') ORDER BY PUBLISHED_ON DESC";
	public static final String	USER_PAST_SURVEYS	=	"SELECT OS.SURVEYID, NAME, DESCRIPTION, TO_CHAR(PUBLISHED_ON,'"+ OILabelConstants.DISPLAY_DATE_FORMAT +"') PUBLISHED_DATE, PUBLISHED_ON,SECURITY FROM OI_SU_SURVEY OS WHERE OS.PUBLISHED_ST = 'Y' AND OS.ACTIVE = 'Y' AND ((OI_PKG.IS_SU_MEMBER(OS.SURVEYID, ?) > 0 AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') ORDER BY PUBLISHED_ON DESC";
	
//	To get Survey details to publish for specific survey
//	Ref :- SURVEY_DETAILS	

//	To check weather user has rights to access to specific survey
	//public static final String	USER_CAN_ACCESS_SURVEY	=	"SELECT OS.SURVEYID FROM OI_SU_SURVEY OS, (SELECT SURVEYID, USERID FROM OI_SU_MEMBERS WHERE UPPER(USERID) = UPPER(?) ) OM WHERE OS.SURVEYID = OM.SURVEYID(+) AND OS.ACTIVE = 'Y' AND ((UPPER(OM.USERID) = UPPER(?) AND OS.SECURITY = 'Y') OR OS.SECURITY = 'N') AND OS.SURVEYID = ?";
	public static final String	USER_CAN_ACCESS_SURVEY	=	"SELECT 1 FROM OI_SU_SURVEY WHERE SURVEYID = ? AND (SECURITY = 'N' OR (SECURITY = 'Y' AND OI_PKG.IS_SU_MEMBER(SURVEYID,?) > 0))";

//	To publish sections details as per hierarchy for specific survey
	public static final String	PUBLISH_SECTION_HIERARCHY	=	"SELECT SECTIONID, LEVEL LEV, NAME, DESCRIPTION, INSTRUCTIONS FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID ORDER SIBLINGS BY SECTIONID";

//	to get Question/Responses statistic for each section based on GDS user or Survey Temp user 
//	(Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER)
	public static final String	PUBLISH_SECTION_STATISTICS	=	"SELECT SECTIONID, COUNT(OSQ.QUESTIONID) QST_CNT, COUNT(OSR.QUESTIONID) RES_CNT FROM OI_SU_QUESTIONS OSQ, (SELECT QUESTIONID FROM OI_SU_RESPONSE WHERE UPPER(USERID) = UPPER(?)) OSR WHERE SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID(+) GROUP BY SECTIONID";
	public static final String	PUBLISH_SECTION_STATISTICS_TUSER	=	"SELECT SECTIONID, COUNT(OSQ.QUESTIONID) QST_CNT, COUNT(OSR.QUESTIONID) RES_CNT FROM OI_SU_QUESTIONS OSQ, (SELECT QUESTIONID FROM OI_SU_RESPONSE_TUSER WHERE UPPER(USERID) = UPPER(?)) OSR WHERE SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID(+) GROUP BY SECTIONID";

//	To get the specific survey Responses/Question ratio
	public static final String SURVEY_QUEST_RESP_RATIO	=	"SELECT DECODE(OSQ_COUNT, 0, 0, ROUND(OSR_COUNT*100/OSQ_COUNT)) PERCENT FROM (SELECT COUNT(QUESTIONID) OSQ_COUNT FROM OI_SU_QUESTIONS WHERE SURVEYID = ?), (SELECT COUNT(OSR.QUESTIONID) OSR_COUNT FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR WHERE SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(USERID) = UPPER(?))";
	public static final String SURVEY_QUEST_RESP_RATIO_TUSER	=	"SELECT DECODE(OSQ_COUNT, 0, 0, ROUND(OSR_COUNT*100/OSQ_COUNT)) PERCENT FROM (SELECT COUNT(QUESTIONID) OSQ_COUNT FROM OI_SU_QUESTIONS WHERE SURVEYID = ?), (SELECT COUNT(OSR.QUESTIONID) OSR_COUNT FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE_TUSER OSR WHERE SURVEYID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID AND UPPER(USERID) = UPPER(?))";

//	To get attached file info
	public static final String	SURVEY_ATTACHED_INFO	=	"SELECT ATTACHED_FILE FROM OI_SU_SURVEY WHERE SURVEYID = ? ";
		
//	To get list of Sections available with set of questions for survey as per hierarchy for section previous/next
	public static final String	PUBLISH_SEC_PREV_NEXT	=	"SELECT DISTINCT RN, OSS.SECTIONID FROM OI_SU_QUESTIONS OSQ, (SELECT ROWNUM RN, SECTIONID, LEVEL LEV, NAME FROM OI_SU_SECTIONS WHERE SURVEYID = ? START WITH NVL(PARENTID, -1) = -1 CONNECT BY PRIOR SECTIONID = PARENTID ORDER SIBLINGS BY SECTIONID) OSS WHERE  OSS.SECTIONID = OSQ.SECTIONID ORDER BY RN";
	
//	To get list of Questions for selected sections available for survey
	public static final String	PUBLISH_SEC_QSTN_LIST	=	"SELECT SECTIONID, QUESTIONID, QUESTION, INSTRUCTIONS, TYPE, NEEDOTHERREMARK, MANDATORY, ANSWER1, ANSWER2, ANSWER3, ANSWER4, ANSWER5, ANSWER6, ANSWER7, ANSWER8, ANSWER9, ANSWER10, USE_LIKERT FROM OI_SU_QUESTIONS WHERE SECTIONID = ? ORDER BY nvl(QUESTIONORDER,QUESTIONID)";

//	To insert the response for survey Questions 
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String	INSERT_RESPONSE	=	"INSERT INTO OI_SU_RESPONSE (RESPONSEID, QUESTIONID, USERID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, RESPONSE_ON) VALUES  (SEQ_OI_SU_RESPONSEID.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE)";
	public static final String	INSERT_RESPONSE_TUSER	=	"INSERT INTO OI_SU_RESPONSE_TUSER (RESPONSEID, QUESTIONID, USERID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS, RESPONSE_ON) VALUES  (SEQ_OI_SU_RESPONSEID.NEXTVAL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE)";

//	To Update response  for survey Questions 
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String	UPDATE_RESPONSE	=	"UPDATE OI_SU_RESPONSE SET RESPONSE1 = ?, RESPONSE2 = ?, RESPONSE3 = ?, RESPONSE4 = ?, RESPONSE5 = ?, RESPONSE6 = ?, RESPONSE7 = ?, RESPONSE8 = ?, RESPONSE9 = ?, RESPONSE10 = ?, OTHERREMARKS = ?, RESPONSE_ON = SYSDATE WHERE QUESTIONID = ? AND UPPER(USERID) = UPPER(?)"; 
	public static final String	UPDATE_RESPONSE_TUSER	=	"UPDATE OI_SU_RESPONSE_TUSER SET RESPONSE1 = ?, RESPONSE2 = ?, RESPONSE3 = ?, RESPONSE4 = ?, RESPONSE5 = ?, RESPONSE6 = ?, RESPONSE7 = ?, RESPONSE8 = ?, RESPONSE9 = ?, RESPONSE10 = ?, OTHERREMARKS = ?, RESPONSE_ON = SYSDATE  WHERE QUESTIONID = ? AND UPPER(USERID) = UPPER(?)"; 

//	To get list of questionIds corresponding to the responses for specific section by selected user
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String	SEC_USER_RESP_QST	=	"SELECT OSR.QUESTIONID FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE OSR WHERE SECTIONID = ? AND UPPER(USERID) = UPPER(?) AND OSQ.QUESTIONID = OSR.QUESTIONID";
	public static final String	SEC_USER_RESP_QST_TUSER	=	"SELECT OSR.QUESTIONID FROM OI_SU_QUESTIONS OSQ, OI_SU_RESPONSE_TUSER OSR WHERE SECTIONID = ? AND UPPER(USERID) = UPPER(?) AND OSQ.QUESTIONID = OSR.QUESTIONID";

//	To Delete response  for survey Questions 
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String	DELETE_RESPONSE	=	"DELETE OI_SU_RESPONSE WHERE RESPONSEID IN ";
	public static final String	DELETE_RESPONSE_TUSER	=	"DELETE OI_SU_RESPONSE_TUSER WHERE RESPONSEID IN ";

//	To get list of responses for specific section, survey by selected user
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String PUBLISH_RESPONSES_LIST	=	"SELECT OSQ.QUESTIONID, TYPE, RESPONSEID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS FROM OI_SU_QUESTIONS OSQ, (SELECT * FROM OI_SU_RESPONSE WHERE UPPER(USERID) = UPPER(?)) OSR WHERE  OSQ.SECTIONID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID(+) ORDER BY nvl(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";
	public static final String PUBLISH_RESPONSES_LIST_TUSER	=	"SELECT OSQ.QUESTIONID, TYPE, RESPONSEID, RESPONSE1, RESPONSE2, RESPONSE3, RESPONSE4, RESPONSE5, RESPONSE6, RESPONSE7, RESPONSE8, RESPONSE9, RESPONSE10, OTHERREMARKS FROM OI_SU_QUESTIONS OSQ, (SELECT * FROM OI_SU_RESPONSE_TUSER WHERE UPPER(USERID) = UPPER(?)) OSR WHERE  OSQ.SECTIONID = ? AND OSQ.QUESTIONID = OSR.QUESTIONID(+) ORDER BY nvl(OSQ.QUESTIONORDER,OSQ.QUESTIONID)";

//	To check whether answered for mandatory questions or not
//	Response table will varry.... OI_SU_RESPONSE, OI_SU_RESPONSE_TUSER
	public static final String CHECK_SURVEY_MANDATORY_QSTS	=	"SELECT QUESTIONID FROM OI_SU_QUESTIONS WHERE SURVEYID = ? AND NVL(MANDATORY, 'O') = 'M' AND QUESTIONID NOT IN (SELECT OS.QUESTIONID FROM OI_SU_RESPONSE OS, OI_SU_QUESTIONS OQ WHERE  OQ.QUESTIONID = OS.QUESTIONID AND SURVEYID = ? AND UPPER(USERID) = UPPER(?) AND (NVL(RESPONSE1, ' ') != ' ' OR NVL(RESPONSE2, ' ') != ' ' OR NVL(RESPONSE3, ' ') != ' ' OR NVL(RESPONSE4, ' ') != ' ' OR NVL(RESPONSE5, ' ') != ' ' OR NVL(RESPONSE6, ' ') != ' ' OR NVL(RESPONSE7, ' ') != ' ' OR NVL(RESPONSE8, ' ') != ' ' OR NVL(RESPONSE9, ' ') != ' ' OR NVL(RESPONSE10, ' ') != ' ') )";
	public static final String CHECK_SURVEY_MANDATORY_QSTS_TUSER	=	"SELECT QUESTIONID FROM OI_SU_QUESTIONS WHERE SURVEYID = ? AND NVL(MANDATORY, 'O') = 'M' AND QUESTIONID NOT IN (SELECT OS.QUESTIONID FROM OI_SU_RESPONSE_TUSER OS, OI_SU_QUESTIONS OQ WHERE  OQ.QUESTIONID = OS.QUESTIONID AND SURVEYID = ? AND UPPER(USERID) = UPPER(?) AND (NVL(RESPONSE1, ' ') != ' ' OR NVL(RESPONSE2, ' ') != ' ' OR NVL(RESPONSE3, ' ') != ' ' OR NVL(RESPONSE4, ' ') != ' ' OR NVL(RESPONSE5, ' ') != ' ' OR NVL(RESPONSE6, ' ') != ' ' OR NVL(RESPONSE7, ' ') != ' ' OR NVL(RESPONSE8, ' ') != ' ' OR NVL(RESPONSE9, ' ') != ' ' OR NVL(RESPONSE10, ' ') != ' ') )";

//	To check whether draft is available or not
	public static final String CHECK_SURVEY_DRAFT	=	"SELECT CPSUID FROM OI_CPSU_DRAFTS WHERE DRAFT_TYPE = 'S' AND CPSUID = ? AND UPPER(USERID) = UPPER(?)";

//	To check whether user submitted the survey or not
	public static final String SURVEY_USER_SUBMITTED	=	"SELECT CPSUID FROM OI_CPSU_DRAFTS WHERE DRAFT_TYPE = 'S' AND CPSUID = ? AND UPPER(USERID) = UPPER(?) AND STATUS = 'S'";
	
//	To Insert draft info 
	public static final String INSERT_SURVEY_DRAFT	=	"INSERT INTO OI_CPSU_DRAFTS (DRAFTID, DRAFT_TYPE, DRAFTED_ON, CPSUID, USERID, STATUS) VALUES (SEQ_OI_CPSU_DRAFTID.NEXTVAL, 'S', SYSDATE, ?, ?, 'D')";
//	To submit survey by user
	public static final String UPDATE_SURVEY_SUBMIT	=	"UPDATE OI_CPSU_DRAFTS SET STATUS = 'S' WHERE DRAFT_TYPE = 'S' AND CPSUID = ? AND UPPER(USERID) = UPPER(?)";

//	To update the submitted status at private members
	public static final String UPDATE_SURVEY_MEMBERS =	"UPDATE OI_SU_MEMBERS SET SUBMITTED_ST = 'Y' WHERE SURVEYID = ? AND UPPER(USERID) = UPPER(?)";
	
//	To update the submitted surveys counter at profile
	public static final String UPDATE_USER_SURVEY_CNT =	"UPDATE OI_AD_PROFILE SET TOTALSURVEYS = NVL(TOTALSURVEYS, 0)+1 WHERE UPPER(USERID) = UPPER(?)";

//reordering queries
	public static final String	REORDER_QUERY	=	"call OI_PKG.REORDER_SU_QUESTIONS(?,?)";

	public static final String UPDATE_SRC_LIKERT_SCALE = "UPDATE OI_SU_QUESTIONS SET USE_LIKERT=? WHERE QUESTIONID = ? AND NVL(USE_LIKERT,'0')=0"	;

	//commented by divya
	//public static final String UPDATE_SRC_LIKERT_SCALE1 = "UPDATE OI_SU_QUESTIONS SET USE_LIKERT='' WHERE  questionid = OI_PKG.GET_PREV_SU_QUESTION_ID(?,'') AND NVL(USE_LIKERT,'0')=0"	;
	
	public static final String UPDATE_LIKERT_BLOCK_ANSWERS = "call OI_PKG.UPDATE_LIKERT_BLOCK_ANSWERS_SU(?)";
	
	public static final String UPDATE_LIKERT_BLOCK_QUESTIONS = "call OI_PKG.UPDATE_LIKERT_BLOCK_Q_SU(?,?)";

	public static final String	COPY_QUERY	=	"call OI_PKG.COPY_SURVEY(?,?,?)";

	public static final String	SURVEY_GP_IDS	=	"select distinct groupid from oi_su_members where surveyid = ?";

	public static final String	 ADD_SU_MEMBERS =	"call OI_PKG.ADD_SU_MEMBERS(?,?)";
	
	public static final String DOES_SURVEY_EXISTS =	"SELECT SURVEYID FROM OI_SU_SURVEY WHERE SURVEYID=?";

	
	public static final String	GET_SURVEY_TAGS = "SELECT a.tag_id tagId, name FROM oi_tags a, oi_tags_map b WHERE a.tag_id = b.tag_id AND b.MODULE_TYPE = 'SU' AND b.MODULE_ID = ?";
	
	
	// User Access
	// Users based on condition
	public static final String QRY_USERIDS_ON_CONDITION = "SELECT USERID FROM OI_AD_PROFILE ";
	
	// Users based on user interest
	public static final String QRY_USERIDS_ON_INTEREST = "SELECT USERID FROM OI_AD_PROFILE "
			+ "WHERE INSTR(',' || REPLACE(UPPER(TAG_WORDS), ' ', NULL) || ',', ',' || REPLACE(UPPER(?), ' ', NULL) || ',', 1, 1) > 0";
	
	
	// Survey members
	public static final String QRY_SU_MEMBERS = "SELECT EMAILID FROM OI_SU_MEMBERS WHERE SURVEYID = ? AND USERID IS NOT NULL";
	
	// Condition of Survey fixed group members
	public static final String QRY_SU_FIXED_GROUP_CONDITION = "SELECT GRP.CONDITION FROM OI_FM_GROUPS GRP, OI_SU_MEMBERS MEM WHERE MEM.SURVEYID = ? AND MEM.USERID IS NULL AND MEM.GROUPID = GRP.GROUPID";

	// Survey tag words
	public static final String QRY_SU_TAG_WORDS = "SELECT name FROM oi_tags a, oi_tags_map b WHERE a.tag_id = b.tag_id AND b.MODULE_TYPE = 'SU' AND b.MODULE_ID = ?";

	// Survey default message
	public static final String QRY_SU_DEFAULT_MESSAGE = "SELECT DESCRIPTION FROM OI_AD_CODE_MASTER WHERE TYPE = 'MAIL_TEMPLATE' AND VALUE = 'SU_DEFAULT_MAIL_BODY'";
	
	// Added by K.K.Kumaresan on Jan19,2008 for adding external mail address.
	public static final String INSERT_EXTERNAL_MAIL	=	"INSERT INTO OI_SU_TEMP_EMAILADDRESS(SURVEYID,EMAILADDRESS) VALUES (?, ?)";
	public static final String	SELECT_EXTERNAL_MAIL	=	"SELECT EMAILADDRESS FROM OI_SU_TEMP_EMAILADDRESS WHERE SURVEYID = ? ";
	public static final String	DELETE_EXTERNAL_MAIL	=	"DELETE OI_SU_TEMP_EMAILADDRESS WHERE SURVEYID = ? ";
	public static final String	CHECK_ELIGIBLE_USER	=	"SELECT * FROM OI_SU_TEMP_EMAILADDRESS WHERE SURVEYID = ? AND EMAILADDRESS like ? ";
}